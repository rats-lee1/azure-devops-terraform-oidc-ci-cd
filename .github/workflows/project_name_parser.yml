name: Issue Project Parser (GitHub CLI)

on:
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write

jobs:
  parse-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          # GitHub CLI는 Ubuntu 러너에 이미 설치되어 있습니다
          gh --version
        
      - name: Get projects and add comment
        env:
          GITHUB_TOKEN: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPO: ${{ github.repository }}
        run: |
          echo "이슈 #${ISSUE_NUMBER} 처리 중 (${REPO})"
          
          # GitHub CLI를 사용하여 이슈 정보 가져오기
          ISSUE_INFO=$(gh issue view ${ISSUE_NUMBER} --repo ${REPO} --json title,body,projectItems)
          
          echo "이슈 정보 가져옴"
          
          # 프로젝트 정보 추출 (jq 사용)
          PROJECTS=$(echo $ISSUE_INFO | jq -r '.projectItems')
          PROJECTS_COUNT=$(echo $PROJECTS | jq 'length')
          
          echo "총 ${PROJECTS_COUNT}개의 프로젝트 정보 파싱됨"
          
          # 이슈에 프로젝트 정보 코멘트 추가
          if [ "$PROJECTS_COUNT" -gt 0 ]; then
            # 프로젝트 정보로 코멘트 생성
            COMMENT="### 이 이슈와 연결된 프로젝트:\n\n"
            
            # 각 프로젝트 처리
            echo $PROJECTS | jq -c '.[]' | while read -r project; do
              PROJECT_TITLE=$(echo $project | jq -r '.title')
              PROJECT_URL=$(echo $project | jq -r '.url')
              
              COMMENT="${COMMENT}- [${PROJECT_TITLE}](${PROJECT_URL})\n"
              
              # 필드 정보 추출 (있는 경우)
              FIELDS=$(echo $project | jq -r '.fields')
              FIELDS_COUNT=$(echo $FIELDS | jq 'length')
              
              if [ "$FIELDS_COUNT" -gt 0 ]; then
                COMMENT="${COMMENT}  - 필드:\n"
                
                echo $FIELDS | jq -c '.[]' | while read -r field; do
                  FIELD_NAME=$(echo $field | jq -r '.name')
                  FIELD_VALUE=$(echo $field | jq -r '.value')
                  
                  COMMENT="${COMMENT}    - ${FIELD_NAME}: ${FIELD_VALUE}\n"
                done
              fi
            done
            
            # 코멘트 추가
            echo -e "$COMMENT" > comment.md
            gh issue comment $ISSUE_NUMBER --repo $REPO --body-file comment.md
            
            echo "이슈에 프로젝트 정보 코멘트가 추가되었습니다"
          else
            echo "이 이슈에 연결된 프로젝트가 없습니다"
            
            # 프로젝트가 없다는 코멘트 추가
            gh issue comment $ISSUE_NUMBER --repo $REPO --body "이 이슈에 연결된 프로젝트를 찾을 수 없습니다."
          fi