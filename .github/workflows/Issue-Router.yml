name: 'Issue Router'

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:
    inputs:
      issue_number:
        description: '처리할 이슈 번호'
        required: true
        type: number

permissions:
  id-token: write
  contents: read
  issues: write
  actions: write

jobs:
  route-issue:
    runs-on: ubuntu-latest
    outputs:
      is_apply: ${{ steps.check-issue-title.outputs.is_apply }}
      is_destroy: ${{ steps.check-issue-title.outputs.is_destroy }}
      issue_number: ${{ steps.get-issue-number.outputs.issue_number }}
    
    steps:
      - name: Get Issue Number
        id: get-issue-number
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            ISSUE_NUMBER="${{ github.event.inputs.issue_number }}"
          else
            ISSUE_NUMBER="${{ github.event.issue.number }}"
          fi
          echo "issue_number=${ISSUE_NUMBER}" >> $GITHUB_OUTPUT
          echo "이슈 번호: ${ISSUE_NUMBER}"
      
      - name: Check Issue Title
        id: check-issue-title
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 이슈 번호 가져오기
            let issue_number;
            if (context.eventName === 'workflow_dispatch') {
              issue_number = context.payload.inputs.issue_number;
            } else {
              issue_number = context.payload.issue.number;
            }
            
            const repo = context.repo;
            
            // 이슈 상세 정보 가져오기
            const issue = await github.rest.issues.get({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: issue_number
            });
            
            const title = issue.data.title;
            const isApply = title.includes('[Apply]');
            const isDestroy = title.includes('[Destroy]');
            
            console.log(`Issue title: "${title}"`);
            console.log(`Is Apply: ${isApply}`);
            console.log(`Is Destroy: ${isDestroy}`);
            
            // 유효한 이슈 타이틀 검증 (둘 다 없거나, 둘 다 있는 경우 처리)
            if (!isApply && !isDestroy) {
              console.log("⚠️ 이슈 타이틀에 [Apply] 또는 [Destroy] 태그가 없습니다.");
              
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: issue_number,
                body: `## ⚠️ 유효하지 않은 이슈 타이틀
                
                이슈 타이틀에 \`[Apply]\` 또는 \`[Destroy]\` 태그가 없습니다.
                
                인프라 변경을 요청하려면 이슈 타이틀에 다음 중 하나의 태그를 포함시켜 주세요:
                - 리소스 생성/수정: \`[Apply]\`
                - 리소스 삭제: \`[Destroy]\`
                
                예: "[Apply] 프로젝트 A용 리소스 그룹 생성 요청"`
              });
              
              // 이슈에 라벨 추가
              await github.rest.issues.addLabels({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: issue_number,
                labels: ['invalid-title']
              });
              
            } else if (isApply && isDestroy) {
              console.log("⚠️ 이슈 타이틀에 [Apply]와 [Destroy] 태그가 모두 포함되어 있습니다.");
              
              await github.rest.issues.createComment({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: issue_number,
                body: `## ⚠️ 유효하지 않은 이슈 타이틀
                
                이슈 타이틀에 \`[Apply]\`와 \`[Destroy]\` 태그가 모두 포함되어 있습니다.
                
                인프라 변경을 요청할 때는 다음 중 하나의 태그만 사용해 주세요:
                - 리소스 생성/수정: \`[Apply]\`
                - 리소스 삭제: \`[Destroy]\`
                
                태그를 수정한 후 다시 시도해 주세요.`
              });
              
              // 이슈에 라벨 추가
              await github.rest.issues.addLabels({
                owner: repo.owner,
                repo: repo.repo,
                issue_number: issue_number,
                labels: ['invalid-title']
              });
            }
            
            core.setOutput('is_apply', isApply.toString());
            core.setOutput('is_destroy', isDestroy.toString());
      
      - name: Route to Azure Apply Workflow
        if: steps.check-issue-title.outputs.is_apply == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Azure_Apply.yml
          ref: ${{ github.ref }}
          inputs: '{"issue_number": "${{ steps.get-issue-number.outputs.issue_number }}"}'
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Route to Azure Destroy Workflow
        if: steps.check-issue-title.outputs.is_destroy == 'true'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Azure_Destroy.yml
          ref: ${{ github.ref }}
          inputs: '{"issue_number": "${{ steps.get-issue-number.outputs.issue_number }}"}'
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Summarize Routing
        run: |
          echo "## 이슈 라우팅 요약" >> $GITHUB_STEP_SUMMARY
          echo "- 이슈 번호: **#${{ steps.get-issue-number.outputs.issue_number }}**" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check-issue-title.outputs.is_apply }}" == "true" ]; then
            echo "- 라우팅 결과: **✅ Azure_Apply 워크플로우로 전달됨**" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.check-issue-title.outputs.is_destroy }}" == "true" ]; then
            echo "- 라우팅 결과: **✅ Azure_Destroy 워크플로우로 전달됨**" >> $GITHUB_STEP_SUMMARY
          else
            echo "- 라우팅 결과: **❌ 유효하지 않은 이슈 타이틀로 인해 전달되지 않음**" >> $GITHUB_STEP_SUMMARY
          fi