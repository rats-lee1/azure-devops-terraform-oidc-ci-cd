name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      resource_group_name:
        description: '삭제할 리소스 그룹 이름 (비워두면 state에서 읽음)'
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  terraform-destroy:
    runs-on: ubuntu-latest

    env:
      ARM_USE_OIDC: true
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Azure CLI
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.0.0
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Destroy
      run: |
        if [ -n "${{ github.event.inputs.resource_group_name }}" ]; then
          # 수동으로 입력한 리소스 그룹 이름이 있는 경우
          az group delete --name "${{ github.event.inputs.resource_group_name }}" --yes
          echo "리소스 그룹 '${{ github.event.inputs.resource_group_name }}'가 삭제되었습니다."
        else
          # Terraform 상태에서 관리되는 리소스 destroy
          terraform destroy -auto-approve
        fi